#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>

using namespace std;


const int dx[] = {0,0,1,-1};
const int dy[] = {1,-1,0,0};
class EllysViewPoints {
public:
    static bool isView(int x,int y,const vector <string>& matrix,int &n,int &m){
        for(int i = 0; i < 4; i++){
            int x1 = x;
            int y1 = y;
            while(x1 >= 0 && x1 < n && y1 >= 0 && y1 < m){
                if (matrix[x1][y1] == '#'){
                    return false;
                }
                x1 += dx[i];
                y1 += dy[i];
            }
        }
        return true;
    }
    static int getCount(int n, int m, const vector <string>& matrix) {
        int ans = 0;
        for(int i = 0; i < n; i++)
            for(int j = 0; j < m; j++)
                if (isView(i,j,matrix,n,m)){
                    ans++;
                }
        return ans;
    }
};


// BEGIN KAWIGIEDIT TESTING
// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
bool KawigiEdit_RunTest(int testNum, int p0, int p1, vector <string> p2, bool hasAnswer, int p3) {
    cout << "Test " << testNum << ": [" << p0 << "," << p1 << "," << "{";
    for (int i = 0; int(p2.size()) > i; ++i) {
        if (i > 0) {
            cout << ",";
        }
        cout << "\"" << p2[i] << "\"";
    }
    cout << "}";
    cout << "]" << endl;
    EllysViewPoints *obj;
    int answer;
    obj = new EllysViewPoints();
    clock_t startTime = clock();
    answer = obj->getCount(p0, p1, p2);
    clock_t endTime = clock();
    delete obj;
    bool res;
    res = true;
    cout << "Time: " << double(endTime - startTime) / CLOCKS_PER_SEC << " seconds" << endl;
    if (hasAnswer) {
        cout << "Desired answer:" << endl;
        cout << "\t" << p3 << endl;
    }
    cout << "Your answer:" << endl;
    cout << "\t" << answer << endl;
    if (hasAnswer) {
        res = answer == p3;
    }
    if (!res) {
        cout << "DOESN'T MATCH!!!!" << endl;
    } else if (double(endTime - startTime) / CLOCKS_PER_SEC >= 2) {
        cout << "FAIL the timeout" << endl;
        res = false;
    } else if (hasAnswer) {
        cout << "Match :-)" << endl;
    } else {
        cout << "OK, but is it right?" << endl;
    }
    cout << "" << endl;
    return res;
}
int main() {
    bool all_right;
    all_right = true;

    int p0;
    int p1;
    vector <string> p2;
    int p3;

    {
        // ----- test 0 -----
        p0 = 6;
        p1 = 9;
        string t2[] = {"..#......",".........",".###..#..",".#.##..#.","...#..#..","........."};
        p2.assign(t2, t2 + sizeof(t2) / sizeof(t2[0]));
        p3 = 6;
        all_right = KawigiEdit_RunTest(0, p0, p1, p2, true, p3) && all_right;
        // ------------------
    }

    {
        // ----- test 1 -----
        p0 = 1;
        p1 = 1;
        string t2[] = {"."};
        p2.assign(t2, t2 + sizeof(t2) / sizeof(t2[0]));
        p3 = 1;
        all_right = KawigiEdit_RunTest(1, p0, p1, p2, true, p3) && all_right;
        // ------------------
    }

    {
        // ----- test 2 -----
        p0 = 7;
        p1 = 4;
        string t2[] = {"####","####","####","####","####","####","####"};
        p2.assign(t2, t2 + sizeof(t2) / sizeof(t2[0]));
        p3 = 0;
        all_right = KawigiEdit_RunTest(2, p0, p1, p2, true, p3) && all_right;
        // ------------------
    }

    {
        // ----- test 3 -----
        p0 = 9;
        p1 = 48;
        string t2[] = {"#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.","................................................",".#####...###...###.......##....###....##..#####.","...#....#.....#...#.....#..#..#...#..#.#..#...#.","...#....#.....#...#........#..#...#....#..#####.","...#....#.....#...#......#....#...#....#......#.","...#.....###...###......####...###.....#..#####.","................................................","#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#."};
        p2.assign(t2, t2 + sizeof(t2) / sizeof(t2[0]));
        p3 = 18;
        all_right = KawigiEdit_RunTest(3, p0, p1, p2, true, p3) && all_right;
        // ------------------
    }

    if (all_right) {
        cout << "You're a stud (at least on the example cases)!" << endl;
    } else {
        cout << "Some of the test cases had errors." << endl;
    }
    return 0;
}
// END KAWIGIEDIT TESTING
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
